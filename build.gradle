plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'io.freefair.aspectj' version "6.6.3"
}

group = 'com.techzealot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.17.6")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //该依赖引入的spring-data-jdbc有获取数据库连接的代码会触发数据库连接有效性检查
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    //spring-boot-starter-aop包含aspectjweaver依赖,而aspectjweaver包含aspectjrt所有类
    implementation 'org.aspectj:aspectjrt:1.9.19'
    //仅仅引入该依赖会创建延迟加载的数据库连接池,不会触发初始化
    //implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'com.mysql:mysql-connector-j:8.0.32'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.testcontainers:junit-jupiter'

    //注意依赖的作用域
    testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.1'
    testImplementation 'com.playtika.testcontainers:embedded-mysql'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom 'com.playtika.testcontainers:testcontainers-spring-boot-bom:3.0.0-RC3'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    exclude("application-test.*", "application-local.*", "bootstrap.*")
    layered {
        enabled.set(true)
    }
}
